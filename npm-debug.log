0 info it worked if it ends with ok
1 verbose cli [ 'node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'install',
1 verbose cli   '-g',
1 verbose cli   'generator-angular' ]
2 info using npm@1.3.21
3 info using node@v0.10.24
4 verbose cache add [ 'generator-angular', null ]
5 verbose cache add name=undefined spec="generator-angular" args=["generator-angular",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'generator-angular',
6 verbose parsed url   path: 'generator-angular',
6 verbose parsed url   href: 'generator-angular' }
7 silly lockFile 458e0b50-generator-angular generator-angular
8 verbose lock generator-angular /Users/mopie/.npm/458e0b50-generator-angular.lock
9 silly lockFile 458e0b50-generator-angular generator-angular
10 silly lockFile 458e0b50-generator-angular generator-angular
11 verbose addNamed [ 'generator-angular', '' ]
12 verbose addNamed [ null, '*' ]
13 silly lockFile 0345f598-generator-angular generator-angular@
14 verbose lock generator-angular@ /Users/mopie/.npm/0345f598-generator-angular.lock
15 silly addNameRange { name: 'generator-angular', range: '*', hasData: false }
16 verbose url raw generator-angular
17 verbose url resolving [ 'https://registry.npmjs.org/', './generator-angular' ]
18 verbose url resolved https://registry.npmjs.org/generator-angular
19 info trying registry request attempt 1 at 11:49:16
20 verbose etag "481QMEYOZB3XB2VTL283N76F"
21 http GET https://registry.npmjs.org/generator-angular
22 http 304 https://registry.npmjs.org/generator-angular
23 silly registry.get cb [ 304,
23 silly registry.get   { date: 'Thu, 13 Feb 2014 16:49:17 GMT',
23 silly registry.get     server: 'Apache',
23 silly registry.get     connection: 'Keep-Alive',
23 silly registry.get     'keep-alive': 'timeout=10, max=50',
23 silly registry.get     etag: '"481QMEYOZB3XB2VTL283N76F"',
23 silly registry.get     'cache-control': 'max-age=1',
23 silly registry.get     vary: 'Accept' } ]
24 verbose etag generator-angular from cache
25 silly addNameRange number 2 { name: 'generator-angular', range: '*', hasData: true }
26 silly addNameRange versions [ 'generator-angular',
26 silly addNameRange   [ '0.1.0',
26 silly addNameRange     '0.1.1',
26 silly addNameRange     '0.1.2',
26 silly addNameRange     '0.1.3',
26 silly addNameRange     '0.1.4',
26 silly addNameRange     '0.1.5',
26 silly addNameRange     '0.2.0',
26 silly addNameRange     '0.2.1',
26 silly addNameRange     '0.2.2',
26 silly addNameRange     '0.3.0',
26 silly addNameRange     '0.3.1',
26 silly addNameRange     '0.4.0',
26 silly addNameRange     '0.5.0',
26 silly addNameRange     '0.5.1',
26 silly addNameRange     '0.6.0-rc.1',
26 silly addNameRange     '0.6.0-rc.2',
26 silly addNameRange     '0.6.0',
26 silly addNameRange     '0.7.0',
26 silly addNameRange     '0.7.1' ] ]
27 verbose addNamed [ 'generator-angular', '0.7.1' ]
28 verbose addNamed [ '0.7.1', '0.7.1' ]
29 silly lockFile 12a22094-generator-angular-0-7-1 generator-angular@0.7.1
30 verbose lock generator-angular@0.7.1 /Users/mopie/.npm/12a22094-generator-angular-0-7-1.lock
31 silly lockFile 12a22094-generator-angular-0-7-1 generator-angular@0.7.1
32 silly lockFile 12a22094-generator-angular-0-7-1 generator-angular@0.7.1
33 silly lockFile 0345f598-generator-angular generator-angular@
34 silly lockFile 0345f598-generator-angular generator-angular@
35 silly resolved [ { name: 'generator-angular',
35 silly resolved     version: '0.7.1',
35 silly resolved     description: 'Yeoman generator for AngularJS',
35 silly resolved     keywords:
35 silly resolved      [ 'yeoman-generator',
35 silly resolved        'scaffold',
35 silly resolved        'framework',
35 silly resolved        'component',
35 silly resolved        'front-end',
35 silly resolved        'app' ],
35 silly resolved     homepage: 'https://github.com/yeoman/generator-angular',
35 silly resolved     bugs: { url: 'https://github.com/yeoman/generator-angular/issues' },
35 silly resolved     author: { name: 'Chrome Developer Relations' },
35 silly resolved     main: 'app/index.js',
35 silly resolved     repository:
35 silly resolved      { type: 'git',
35 silly resolved        url: 'git://github.com/yeoman/generator-angular.git' },
35 silly resolved     scripts: { test: 'mocha' },
35 silly resolved     dependencies:
35 silly resolved      { 'yeoman-generator': '~0.13.0',
35 silly resolved        chalk: '~0.3.0',
35 silly resolved        wiredep: '~0.4.2' },
35 silly resolved     peerDependencies: { 'generator-karma': '~0.6.0', yo: '>=1.0.0' },
35 silly resolved     devDependencies:
35 silly resolved      { mocha: '~1.14.0',
35 silly resolved        grunt: '~0.4.1',
35 silly resolved        'grunt-contrib-jshint': '~0.7.2',
35 silly resolved        'grunt-conventional-changelog': '~1.0.0',
35 silly resolved        'load-grunt-tasks': '~0.2.0',
35 silly resolved        marked: '~0.2.8',
35 silly resolved        semver: '~2.2.1',
35 silly resolved        'underscore.string': '~2.3.1',
35 silly resolved        'grunt-release': '~0.6.0' },
35 silly resolved     engines: { node: '>=0.8.0', npm: '>=1.2.10' },
35 silly resolved     licenses: [ [Object] ],
35 silly resolved     readme: '# AngularJS generator [![Build Status](https://secure.travis-ci.org/yeoman/generator-angular.png?branch=master)](http://travis-ci.org/yeoman/generator-angular) [![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\n\n> Yeoman generator for AngularJS - lets you quickly set up a project with sensible defaults and best practises.\n\n\n## Usage\n\nInstall `generator-angular`:\n```\nnpm install -g generator-angular\n```\n\nMake a new directory, and `cd` into it:\n```\nmkdir my-new-project && cd $_\n```\n\nRun `yo angular`, optionally passing an app name:\n```\nyo angular [app-name]\n```\n\nRun `grunt` for building and `grunt serve` for preview\n\n\n## Generators\n\nAvailable generators:\n\n* [angular](#app) (aka [angular:app](#app))\n* [angular:controller](#controller)\n* [angular:directive](#directive)\n* [angular:filter](#filter)\n* [angular:route](#route)\n* [angular:service](#service)\n* [angular:provider](#service)\n* [angular:factory](#service)\n* [angular:value](#service)\n* [angular:constant](#service)\n* [angular:decorator] (#decorator)\n* [angular:view](#view)\n\n**Note: Generators are to be run from the root directory of your app.**\n\n### App\nSets up a new AngularJS app, generating all the boilerplate you need to get started. The app generator also optionally installs Twitter Bootstrap and additional AngularJS modules, such as angular-resource (installed by default).\n\nExample:\n```bash\nyo angular\n```\n\n### Route\nGenerates a controller and view, and configures a route in `app/scripts/app.js` connecting them.\n\nExample:\n```bash\nyo angular:route myroute\n```\n\nProduces `app/scripts/controllers/myroute.js`:\n```javascript\nangular.module(\'myMod\').controller(\'MyrouteCtrl\', function ($scope) {\n  // ...\n});\n```\n\nProduces `app/views/myroute.html`:\n```html\n<p>This is the myroute view</p>\n```\n\n### Controller\nGenerates a controller in `app/scripts/controllers`.\n\nExample:\n```bash\nyo angular:controller user\n```\n\nProduces `app/scripts/controllers/user.js`:\n```javascript\nangular.module(\'myMod\').controller(\'UserCtrl\', function ($scope) {\n  // ...\n});\n```\n### Directive\nGenerates a directive in `app/scripts/directives`.\n\nExample:\n```bash\nyo angular:directive myDirective\n```\n\nProduces `app/scripts/directives/myDirective.js`:\n```javascript\nangular.module(\'myMod\').directive(\'myDirective\', function () {\n  return {\n    template: \'<div></div>\',\n    restrict: \'E\',\n    link: function postLink(scope, element, attrs) {\n      element.text(\'this is the myDirective directive\');\n    }\n  };\n});\n```\n\n### Filter\nGenerates a filter in `app/scripts/filters`.\n\nExample:\n```bash\nyo angular:filter myFilter\n```\n\nProduces `app/scripts/filters/myFilter.js`:\n```javascript\nangular.module(\'myMod\').filter(\'myFilter\', function () {\n  return function (input) {\n    return \'myFilter filter:\' + input;\n  };\n});\n```\n\n### View\nGenerates an HTML view file in `app/views`.\n\nExample:\n```bash\nyo angular:view user\n```\n\nProduces `app/views/user.html`:\n```html\n<p>This is the user view</p>\n```\n\n### Service\nGenerates an AngularJS service.\n\nExample:\n```bash\nyo angular:service myService\n```\n\nProduces `app/scripts/services/myService.js`:\n```javascript\nangular.module(\'myMod\').service(\'myService\', function () {\n  // ...\n});\n```\n\nYou can also do `yo angular:factory`, `yo angular:provider`, `yo angular:value`, and `yo angular:constant` for other types of services.\n\n### Decorator\nGenerates an AngularJS service decorator.\n\nExample:\n```bash\nyo angular:decorator serviceName\n```\n\nProduces `app/scripts/decorators/serviceNameDecorator.js`:\n```javascript\nangular.module(\'myMod\').config(function ($provide) {\n    $provide.decorator(\'serviceName\', function ($delegate) {\n      // ...\n      return $delegate;\n    });\n  });\n```\n\n## Options\nIn general, these options can be applied to any generator, though they only affect generators that produce scripts.\n\n### CoffeeScript\nFor generators that output scripts, the `--coffee` option will output CoffeeScript instead of JavaScript.\n\nFor example:\n```bash\nyo angular:controller user --coffee\n```\n\nProduces `app/scripts/controller/user.coffee`:\n```coffeescript\nangular.module(\'myMod\')\n  .controller \'UserCtrl\', ($scope) ->\n```\n\nA project can mix CoffeScript and JavaScript files.\n\nTo output JavaScript files, even if CoffeeScript files exist (the default is to output CoffeeScript files if the generator finds any in the project), use `--coffee=false`.\n\n### Minification Safe\n\n**Deprecated**\n\n[Related Issue #452](https://github.com/yeoman/generator-angular/issues/452): This option is being removed in future versions of the generator. Initially it was needed as ngMin was not entirely stable. As it has matured, the need to keep separate versions of the script templates has led to extra complexity and maintenance of the generator. By removing these extra burdens, new features and bug fixes should be easier to implement. If you are dependent on this option, please take a look at ngMin and seriously consider implementing it in your own code. It will help reduce the amount of typing you have to do (and look through) as well as make your code cleaner to look at.\n\n\nBy default, generators produce unannotated code. Without annotations, AngularJS\'s DI system will break when minified. Typically, these annotations that make minification safe are added automatically at build-time, after application files are concatenated, but before they are minified. By providing the `--minsafe` option, the code generated will out-of-the-box be ready for minification. The trade-off is between amount of boilerplate, and build process complexity.\n\n#### Example\n```bash\nyo angular:controller user --minsafe\n```\n\nProduces `app/controller/user.js`:\n```javascript\nangular.module(\'myMod\').controller(\'UserCtrl\', [\'$scope\', function ($scope) {\n  // ...\n}]);\n```\n\n#### Background\nUnannotated:\n```javascript\nangular.module(\'myMod\').controller(\'MyCtrl\', function ($scope, $http, myService) {\n  // ...\n});\n```\n\nAnnotated:\n```javascript\nangular.module(\'myMod\').controller(\'MyCtrl\',\n  [\'$scope\', \'$http\', \'myService\', function ($scope, $http, myService) {\n\n    // ...\n  }]);\n```\n\nThe annotations are important because minified code will rename variables, making it impossible for AngularJS to infer module names based solely on function parameters.\n\nThe recommended build process uses `ngmin`, a tool that automatically adds these annotations. However, if you\'d rather not use `ngmin`, you have to add these annotations manually yourself. **One thing to note is that `ngmin` does not produce minsafe code for things that are not main level elements like controller, services, providers, etc.:\n```javascript\nresolve: {\n  User: function(myService) {\n    return MyService();\n  }\n}\n```\n\nwill need to be manually done like so:\n```javascript\nresolve: {\n  User: [\'myService\', function(myService) {\n    return MyService();\n  }]\n}\n```\n\n\n### Add to Index\nBy default, new scripts are added to the index.html file. However, this may not always be suitable. Some use cases:\n\n* Manually added to the file\n* Auto-added by a 3rd party plugin\n* Using this generator as a subgenerator\n\nTo skip adding them to the index, pass in the skip-add argument:\n```bash\nyo angular:service serviceName --skip-add\n```\n\n## Bower Components\n\nThe following packages are always installed by the [app](#app) generator:\n\n* angular\n* angular-mocks\n* angular-scenario\n\n\nThe following additional modules are available as components on bower, and installable via `bower install`:\n\n* angular-cookies\n* angular-loader\n* angular-resource\n* angular-sanitize\n\nAll of these can be updated with `bower update` as new versions of AngularJS are released.\n\n## Configuration\nYeoman generated projects can be further tweaked according to your needs by modifying project files appropriately.\n\n### Output\nYou can change the `app` directory by adding a `appPath` property to `bower.json`. For instance, if you wanted to easily integrate with Express.js, you could add the following:\n\n```json\n{\n  "name": "yo-test",\n  "version": "0.0.0",\n  ...\n  "appPath": "public"\n}\n\n```\nThis will cause Yeoman-generated client-side files to be placed in `public`.\n\n## Testing\n\nRunning `grunt test` will run the unit tests with karma.\n\n## Contribute\n\nSee the [contributing docs](https://github.com/yeoman/yeoman/blob/master/contributing.md)\n\nWhen submitting an issue, please follow the [guidelines](https://github.com/yeoman/yeoman/blob/master/contributing.md#issue-submission). Especially important is to make sure Yeoman is up-to-date, and providing the command or commands that cause the issue.\n\nWhen submitting a PR, make sure that the commit messages match the [AngularJS conventions](https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/).\n\nWhen submitting a bugfix, write a test that exposes the bug and fails before applying your fix. Submit the test alongside the fix.\n\nWhen submitting a new feature, add tests that cover the feature.\n\n## License\n\n[BSD license](http://opensource.org/licenses/bsd-license.php)\n',
35 silly resolved     readmeFilename: 'readme.md',
35 silly resolved     _id: 'generator-angular@0.7.1',
35 silly resolved     _from: 'generator-angular@' } ]
36 info install generator-angular@0.7.1 into /usr/local/lib
37 info installOne generator-angular@0.7.1
38 info /usr/local/lib/node_modules/generator-angular unbuild
39 verbose tar unpack /Users/mopie/.npm/generator-angular/0.7.1/package.tgz
40 silly lockFile 919d8aa6-b-node-modules-generator-angular tar:///usr/local/lib/node_modules/generator-angular
41 verbose lock tar:///usr/local/lib/node_modules/generator-angular /Users/mopie/.npm/919d8aa6-b-node-modules-generator-angular.lock
42 silly lockFile 25bc27f5-erator-angular-0-7-1-package-tgz tar:///Users/mopie/.npm/generator-angular/0.7.1/package.tgz
43 verbose lock tar:///Users/mopie/.npm/generator-angular/0.7.1/package.tgz /Users/mopie/.npm/25bc27f5-erator-angular-0-7-1-package-tgz.lock
44 silly gunzTarPerm modes [ '755', '644' ]
45 error Error: EACCES, mkdir '/usr/local/lib/node_modules/generator-angular'
45 error  { [Error: EACCES, mkdir '/usr/local/lib/node_modules/generator-angular']
45 error   errno: 3,
45 error   code: 'EACCES',
45 error   path: '/usr/local/lib/node_modules/generator-angular',
45 error   fstream_type: 'Directory',
45 error   fstream_path: '/usr/local/lib/node_modules/generator-angular',
45 error   fstream_class: 'DirWriter',
45 error   fstream_stack:
45 error    [ '/usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23',
45 error      '/usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53',
45 error      'Object.oncomplete (fs.js:107:15)' ] }
46 error Please try running this command again as root/Administrator.
47 error System Darwin 13.0.0
48 error command "node" "/usr/local/bin/npm" "install" "-g" "generator-angular"
49 error cwd /Users/mopie/Desktop/eventsModule-master2
50 error node -v v0.10.24
51 error npm -v 1.3.21
52 error path /usr/local/lib/node_modules/generator-angular
53 error fstream_path /usr/local/lib/node_modules/generator-angular
54 error fstream_type Directory
55 error fstream_class DirWriter
56 error code EACCES
57 error errno 3
58 error stack Error: EACCES, mkdir '/usr/local/lib/node_modules/generator-angular'
59 error fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23
59 error fstream_stack /usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53
59 error fstream_stack Object.oncomplete (fs.js:107:15)
60 verbose exit [ 3, true ]
